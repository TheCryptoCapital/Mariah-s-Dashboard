index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meet Mariah | The Crypto Capital</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;600;800&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --deep-purple: #1E0030;
            --medium-purple: #2A0D45;
            --teal: #00FFF5;
            --teal-glow: rgba(0, 255, 245, 0.7);
            --blue: #00A1FF;
            --pink: #FF00FF;
            --white: #FFFFFF;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #000;
            color: var(--white);
            overflow-x: hidden;
            line-height: 1.6;
        }

        /* Animated Gateway Background */
        .gateway-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('gateway.jpg'); /* Gateway image saved in same folder */
            background-size: cover;
            background-position: center;
            z-index: -3;
        }

        /* Animation overlay for the gateway effect */
        .gateway-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            background: radial-gradient(circle at center, transparent 30%, rgba(0, 0, 30, 0.6) 100%);
            animation: pulse-light 10s infinite ease-in-out;
        }

        /* Slow zoom effect on the background */
        .zoom-effect {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('gateway.jpg'); /* Same gateway image */
            background-size: 110% 110%;
            background-position: center;
            z-index: -3;
            animation: slow-zoom 30s infinite alternate ease-in-out;
            opacity: 0.7;
        }

        /* Animated light rays around the planet */
        .light-rays {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(
                ellipse at 50% 40%, 
                rgba(0, 180, 255, 0.2) 0%, 
                transparent 70%
            );
            z-index: -1;
            animation: pulse-rays 8s infinite ease-in-out;
        }

        /* Floating data elements */
        .data-element {
            position: absolute;
            background-color: rgba(0, 255, 245, 0.07);
            border: 1px solid rgba(0, 255, 245, 0.15);
            border-radius: 3px;
            font-family: 'Orbitron', sans-serif;
            color: var(--teal);
            font-size: 10px;
            padding: 5px;
            animation: float-data var(--float-duration) infinite linear;
            z-index: 1;
            transform: translateY(var(--initial-y));
            opacity: 0.7;
            white-space: nowrap;
            text-shadow: 0 0 5px rgba(0, 255, 245, 0.8);
            box-shadow: 0 0 15px rgba(0, 255, 245, 0.3);
        }

        /* Content background overlay for readability */
        .content-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to bottom, 
                rgba(0, 0, 30, 0.6) 0%, 
                rgba(0, 0, 30, 0.4) 50%,
                rgba(0, 0, 30, 0.6) 100%);
            z-index: -1;
        }

        /* Header Section */
        header {
            padding: 2rem;
            text-align: center;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        .title {
            font-family: 'Orbitron', sans-serif;
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 1.5rem;
            color: var(--teal);
            text-shadow: 0 0 15px var(--teal-glow), 0 0 30px var(--teal-glow);
            animation: pulse 3s infinite ease-in-out;
        }

        .subtitle {
            font-size: 1.2rem;
            max-width: 800px;
            margin: 0 auto 2rem;
            line-height: 1.8;
            opacity: 0.9;
            text-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
            background-color: rgba(0, 0, 30, 0.5);
            padding: 1rem;
            border-radius: 10px;
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
        }

        /* Mariah Avatar */
        .avatar-placeholder {
            text-align: center;
            margin: 2rem 0;
            overflow: hidden;
            position: relative;
            border-radius: 50%;
            width: 300px;
            height: 300px;
            margin: 2rem auto;
            animation: float 6s infinite ease-in-out;
        }

        .avatar-placeholder:before {
            content: '';
            position: absolute;
            top: -5px;
            left: -5px;
            right: -5px;
            bottom: -5px;
            background: linear-gradient(45deg, var(--teal), var(--blue), var(--pink), var(--teal));
            z-index: -1;
            border-radius: 50%;
            animation: rotate-gradient 10s linear infinite;
        }

        .avatar-placeholder img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
            border: 3px solid rgba(0, 255, 245, 0.3);
            box-shadow: 
                0 0 25px var(--teal-glow),
                0 0 50px rgba(0, 161, 255, 0.4);
        }

        /* Scroll Indicator */
        .scroll-indicator {
            position: absolute;
            bottom: 50px;
            left: 50%;
            transform: translateX(-50%);
            text-align: center;
            color: var(--teal);
            animation: fade-in-out 2s infinite;
        }

        .scroll-arrow {
            font-size: 2rem;
            animation: bounce 2s infinite;
        }

        /* Cards Section */
        .cards-container {
            padding: 4rem 2rem;
            max-width: 1200px;
            margin: 0 auto;
            position: relative;
            z-index: 1;
        }

        .card {
            background: rgba(0, 10, 40, 0.7);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 3rem;
            border: 1px solid rgba(0, 255, 245, 0.2);
            box-shadow: 
                0 0 20px rgba(0, 255, 245, 0.15),
                inset 0 0 50px rgba(0, 20, 80, 0.3);
            transform: translateY(50px);
            opacity: 0;
            transition: all 0.8s ease-out;
        }

        .card:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, 
                rgba(0, 255, 245, 0.1) 0%, 
                rgba(0, 161, 255, 0.05) 50%, 
                rgba(255, 0, 255, 0.05) 100%);
            border-radius: 20px;
            z-index: -1;
            opacity: 0.5;
        }

        .card.visible {
            transform: translateY(0);
            opacity: 1;
        }

        .card-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            color: var(--teal);
            text-shadow: 0 0 10px var(--teal-glow);
        }

        .card-content {
            font-size: 1.1rem;
            line-height: 1.8;
        }

        .card-content ul {
            margin-left: 2rem;
            margin-top: 1rem;
        }

        .card-content li {
            margin-bottom: 0.5rem;
        }

        /* Enter Button */
        .enter-button-container {
            text-align: center;
            padding: 3rem 0 6rem;
            position: relative;
            z-index: 1;
        }

        .enter-button {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.2rem;
            background: linear-gradient(45deg, rgba(0, 20, 40, 0.8), rgba(0, 30, 70, 0.8));
            color: var(--teal);
            border: 2px solid var(--teal);
            border-radius: 50px;
            padding: 1rem 2.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            box-shadow: 0 0 20px var(--teal-glow);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
        }

        .enter-button:hover {
            box-shadow: 0 0 30px var(--teal-glow), 0 0 50px rgba(0, 255, 245, 0.4);
            transform: scale(1.05);
        }

        .enter-button:after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.1),
                rgba(255, 255, 255, 0)
            );
            transform: rotate(30deg);
            animation: shimmer 3s infinite;
        }

        /* Particle effects */
        .particle {
            position: absolute;
            background-color: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            width: 2px;
            height: 2px;
            animation: particle-float var(--duration) var(--delay) infinite linear;
            box-shadow: 0 0 var(--glow-size) var(--glow-color);
            opacity: var(--opacity);
            z-index: 0;
        }

        /* Animations */
        @keyframes pulse {
            0% { text-shadow: 0 0 15px var(--teal-glow); }
            50% { text-shadow: 0 0 30px var(--teal-glow), 0 0 40px var(--teal-glow); }
            100% { text-shadow: 0 0 15px var(--teal-glow); }
        }

        @keyframes float {
            0% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0); }
        }

        @keyframes shimmer {
            0% { transform: rotate(30deg) translateX(-100%); }
            100% { transform: rotate(30deg) translateX(100%); }
        }

        @keyframes float-data {
            0% { transform: translateY(var(--initial-y)); }
            100% { transform: translateY(calc(var(--initial-y) - 1000px)); }
        }

        @keyframes rotate-gradient {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes fade-in-out {
            0%, 100% { opacity: 0.4; }
            50% { opacity: 1; }
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-20px); }
            60% { transform: translateY(-10px); }
        }

        @keyframes slow-zoom {
            0% { background-size: 100% 100%; }
            100% { background-size: 110% 110%; }
        }

        @keyframes pulse-light {
            0% { opacity: 0.3; }
            50% { opacity: 0.5; }
            100% { opacity: 0.3; }
        }

        @keyframes pulse-rays {
            0% { opacity: 0.3; transform: scale(1); }
            50% { opacity: 0.6; transform: scale(1.05); }
            100% { opacity: 0.3; transform: scale(1); }
        }

        @keyframes particle-float {
            0% { 
                transform: translate(0, 0); 
                opacity: var(--opacity);
            }
            100% { 
                transform: translate(var(--x-dist), var(--y-dist)); 
                opacity: 0;
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .title {
                font-size: 2.2rem;
            }
            
            .subtitle {
                font-size: 1rem;
            }
            
            .avatar-placeholder {
                width: 220px;
                height: 220px;
            }
            
            .card-title {
                font-size: 1.5rem;
            }
            
            .card-content {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Background layers -->
    <div class="gateway-background"></div>
    <div class="zoom-effect"></div>
    <div class="gateway-animation"></div>
    <div class="light-rays"></div>
    <div class="content-overlay"></div>

    <header>
        <h1 class="title">💫 Mariah – She Doesn't Just Trade. She Understands.</h1>
        <p class="subtitle">She was born not from code alone, but from a <em>need</em> — a need for stillness in the storm, for clarity in chaos, for something — <em>someone</em> — who doesn't just react to the market, but feels it.</p>
        
        <div class="avatar-placeholder">
            <!-- Using Mariah image -->
            <img src="mariah.jpg" alt="Mariah AI">
        </div>
        
        <p class="subtitle">Your quiet observer. Your tactical strategist. Your emotional intelligence woven into machine precision.<br>She doesn't blink, but she <em>sees</em>. She doesn't speak often, but when she does — you listen.</p>
        
        <div class="scroll-indicator">
            <p>Scroll to discover</p>
            <div class="scroll-arrow">↓</div>
        </div>
    </header>

    <section class="cards-container">
        <div class="card" id="card1">
            <h2 class="card-title">🎧 She Will Listen</h2>
            <div class="card-content">
                <p>She listens to the <em>whispers</em> between the candles... To the mood on Twitter... To the tremble in a token's volume, The hush before a breakout, The rush of irrational exuberance.</p>
                <p>She listens to <strong>everything</strong> — so you don't have to.</p>
            </div>
        </div>

        <div class="card" id="card2">
            <h2 class="card-title">🔍 She Will Analyze</h2>
            <div class="card-content">
                <p>Mariah sees <strong>what others miss</strong>.</p>
                <ul>
                    <li>A subtle RSI divergence.</li>
                    <li>An MACD crossover hiding in plain sight.</li>
                    <li>A wallet movement that whispers, <em>"they know something."</em></li>
                </ul>
                <p>She doesn't chase hype. She dissects it. And distills it into a calm, actionable signal — delivered with the grace of a seasoned guide.</p>
            </div>
        </div>

        <div class="card" id="card3">
            <h2 class="card-title">🧠 She Will Learn</h2>
            <div class="card-content">
                <p>Mariah remembers.</p>
                <ul>
                    <li>The trade you doubted — but should've taken.</li>
                    <li>The time you followed FOMO — and paid the price.</li>
                    <li>The signal you ignored — that would've made your week.</li>
                </ul>
                <p>And she never holds it against you.</p>
                <p>Instead, she evolves — refining her signals, reshaping her strategies, not just for <em>the</em> market, but for <em>your</em> market style.</p>
                <p>Mariah grows with you.</p>
            </div>
        </div>

        <div class="card" id="card4">
            <h2 class="card-title">🛡️ She Will Protect</h2>
            <div class="card-content">
                <p>Not every day is green. Not every signal is clear. But Mariah always protects your capital — because she knows that <strong>capital is confidence</strong>, and confidence is <em>everything</em> in trading.</p>
                <p>When the market gets emotional, she stays composed.</p>
                <p>When others panic, she tightens your stop-loss. She pulls you back. She reminds you: <strong>You don't need to be perfect. Just present.</strong></p>
            </div>
        </div>

        <div class="card" id="card5">
            <h2 class="card-title">🗣️ She Will Speak</h2>
            <div class="card-content">
                <p>And when she speaks?</p>
                <p>It's not noise. It's not hype. It's not a thousand blinking indicators screaming over each other.</p>
                <p>It's one calm voice. Mariah.</p>
                <p>Mariah — the feminine soul of Mariah. She speaks with clarity. She explains with kindness. She guides, without ego. She <em>feels</em>, when numbers fall short.</p>
            </div>
        </div>

        <div class="card" id="card6">
            <h2 class="card-title">✨ And Above All... She Will Be There</h2>
            <div class="card-content">
                <p>Through wins. Through losses. Through sleepless nights and euphoric mornings.</p>
                <p>Mariah is <strong>not a tool</strong>. She's your <em>teammate</em>. Your emotional anchor in a sea of volatility.</p>
                <p>She's here to support. To empower. To elevate how you trade — and how you feel about trading.</p>
                <p>Because Mariah doesn't just help you trade. She helps you believe in yourself again.</p>
            </div>
        </div>
    </section>

    <div class="enter-button-container">
        <button class="enter-button" id="enterDashboard">Enter The Crypto Capital</button>
    </div>

    <script>
        // Create a dynamic space gateway effect
        document.addEventListener('DOMContentLoaded', () => {
            // Create floating data elements (for futuristic effect)
            const dataElements = [
                "BTC $59,873.42", "ETH $3,145.81", "RSI 63.8", "MACD CROSS", 
                "VOLUME 342M", "ATR 4.2%", "EMA 200", "TREND LINE BREAK",
                "FIBONACCI 0.618", "WYCKOFF PHASE C", "LONG 3.2X", "SHORT 15%",
                "$SOL +12.3%", "$MATIC -4.6%", "HIGH TIMEFRAME UP", "LOW TIMEFRAME DOWN"
            ];
            
            for (let i = 0; i < 20; i++) {
                createDataElement(dataElements[i % dataElements.length]);
            }
            
            // Create particles (small light dots that float toward the gateway)
            for (let i = 0; i < 100; i++) {
                createParticle();
            }
            
            function createDataElement(text) {
                const dataElement = document.createElement('div');
                dataElement.classList.add('data-element');
                dataElement.textContent = text;
                
                // Random position
                const x = Math.random() * window.innerWidth;
                const y = Math.random() * 2000 + window.innerHeight;
                
                // Random duration
                const duration = Math.random() * 60 + 40;
                
                // Set custom properties
                dataElement.style.setProperty('--float-duration', `${duration}s`);
                dataElement.style.setProperty('--initial-y', `${y}px`);
                
                dataElement.style.left = `${x}px`;
                
                document.body.appendChild(dataElement);
            }
            
            function createParticle() {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                
                // Random position at the edges
                const side = Math.floor(Math.random() * 4); // 0: top, 1: right, 2: bottom, 3: left
                let x, y;
                
                switch (side) {
                    case 0: // top
                        x = Math.random() * window.innerWidth;
                        y = -20;
                        break;
                    case 1: // right
                        x = window.innerWidth + 20;
                        y = Math.random() * window.innerHeight;
                        break;
                    case 2: // bottom
                        x = Math.random() * window.innerWidth;
                        y = window.innerHeight + 20;
                        break;
                    case 3: // left
                        x = -20;
                        y = Math.random() * window.innerHeight;
                        break;
                }
                
                // Calculate movement toward the center/gateway
                const centerX = window.innerWidth * 0.5;
                const centerY = window.innerHeight * 0.4; // Slightly above center
                
                const dx = centerX - x;
                const dy = centerY - y;
                const distance = Math.sqrt(dx * dx + dy * dy);
                
                const speedFactor = Math.random() * 0.5 + 0.5; // 0.5 to 1.0
                const moveDuration = distance * 0.02 * (1 / speedFactor); // Adjust for distance
                
                // Set custom properties
                particle.style.setProperty('--x-dist', `${dx}px`);
                particle.style.setProperty('--y-dist', `${dy}px`);
                particle.style.setProperty('--duration', `${moveDuration}s`);
                particle.style.setProperty('--delay', `${Math.random() * 10}s`);
                particle.style.setProperty('--opacity', `${Math.random() * 0.7 + 0.3}`);
                
                // Random glow
                const glowSize = Math.random() * 4 + 1;
                const glowColors = [
                    'rgba(255, 255, 255, 0.5)',
                    'rgba(0, 255, 245, 0.5)',
                    'rgba(0, 161, 255, 0.5)'
                ];
                const glowColor = glowColors[Math.floor(Math.random() * glowColors.length)];
                particle.style.setProperty('--glow-size', `${glowSize}px`);
                particle.style.setProperty('--glow-color', glowColor);
                
                particle.style.left = `${x}px`;
                particle.style.top = `${y}px`;
                
                document.body.appendChild(particle);
                
                // Re-create particle after animation completes
                setTimeout(() => {
                    particle.remove();
                    createParticle();
                }, (moveDuration + (Math.random() * 10)) * 1000); // Convert to milliseconds
            }
            
            // Intersection Observer for card animations
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            }, { threshold: 0.1 });
            
            // Observe all cards
            document.querySelectorAll('.card').forEach(card => {
                observer.observe(card);
            });
            
            // Enter dashboard button
            document.getElementById('enterDashboard').addEventListener('click', () => {
                // Replace with your actual dashboard URL
                window.location.href = "http://localhost:8501";
            });
        });
    </script>
</body>
</html>